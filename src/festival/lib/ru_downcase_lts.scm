(lts.ruleset
 ru_downcase
 ( )
 (
  ( [ А ] = а )
  ( [ Б ] = б )
  ( [ В ] = в )
  ( [ Г ] = г )
  ( [ Д ] = д )
  ( [ Е ] = е )
  ( [ Ё ] = ё )
  ( [ Ж ] = ж )
  ( [ З ] = з )
  ( [ И ] = и )
  ( [ Й ] = й ) 
  ( [ К ] = к )
  ( [ Л ] = л )
  ( [ М ] = м )
  ( [ Н ] = н )
  ( [ О ] = о )
  ( [ П ] = п )
  ( [ Р ] = р )
  ( [ С ] = с )
  ( [ Т ] = т )
  ( [ У ] = у )
  ( [ Ф ] = ф )
  ( [ Х ] = х )
  ( [ Ц ] = ц )
  ( [ Ч ] = ч )
  ( [ Ш ] = ш )
  ( [ Щ ] = щ )
  ( [ Ъ ] = ъ )
  ( [ Ы ] = ы )
  ( [ Ь ] = ь )
  ( [ Э ] = э )
  ( [ Ю ] = ю )
  ( [ Я ] = я )

  ( [ а ] = а )
  ( [ б ] = б )
  ( [ в ] = в )
  ( [ г ] = г )
  ( [ д ] = д )
  ( [ е ] = е )
  ( [ ё ] = ё )
  ( [ ж ] = ж )
  ( [ з ] = з )
  ( [ и ] = и )
  ( [ й ] = й ) 
  ( [ к ] = к )
  ( [ л ] = л )
  ( [ м ] = м )
  ( [ н ] = н )
  ( [ о ] = о )
  ( [ п ] = п )
  ( [ р ] = р )
  ( [ с ] = с )
  ( [ т ] = т )
  ( [ у ] = у )
  ( [ ф ] = ф )
  ( [ х ] = х )
  ( [ ц ] = ц )
  ( [ ч ] = ч )
  ( [ ш ] = ш )
  ( [ щ ] = щ )
  ( [ ъ ] = ъ )
  ( [ ы ] = ы )
  ( [ ь ] = ь )
  ( [ э ] = э )
  ( [ ю ] = ю )
  ( [ я ] = я )

  ( [ - ] - = )
  ( [ - ] = - )
  ( [ "'" ] = )
  ( [ "+" ] = "+" )
 
  ( [ A ] = а )
  ( [ B ] = б )
  ( [ C ] = ц )
  ( [ D ] = д )
  ( [ E ] = е )
  ( [ F ] = ф )
  ( [ G ] = г )
  ( [ H ] = х )
  ( [ I ] = и )
  ( [ J ] = ж )
  ( [ K ] = к )
  ( [ L ] = л )
  ( [ M ] = м )
  ( [ N ] = н )
  ( [ O ] = о )
  ( [ P ] = п )
  ( [ Q ] = к )
  ( [ R ] = р )
  ( [ S ] = с )
  ( [ T ] = т )
  ( [ U ] = у )
  ( [ V ] = в )
  ( [ W ] = в )
  ( [ X ] = к с )
  ( [ Y ] = й )
  ( [ Z ] = з )

  ( [ a ] = а )
  ( [ b ] = б )
  ( [ c ] = ц )
  ( [ d ] = д )
  ( [ e ] = е )
  ( [ f ] = ф )
  ( [ g ] = г )
  ( [ h ] = х )
  ( [ i ] = и )
  ( [ j ] = ж )
  ( [ k ] = к )
  ( [ l ] = л )
  ( [ m ] = м )
  ( [ n ] = н )
  ( [ o ] = о )
  ( [ p ] = п )
  ( [ q ] = к )
  ( [ r ] = р )
  ( [ s ] = с )
  ( [ t ] = т )
  ( [ u ] = у )
  ( [ v ] = в )
  ( [ w ] = в )
  ( [ x ] = к с )
  ( [ y ] = й )
  ( [ z ] = з )
))

(require 'ru_hyphen_lts)

(define (russian_downcase word)
  (let
      ((letters (unwind-protect (lts.apply (lts.apply (utf8explode word) 'ru_downcase) 'ru_hyphen) nil)))
    (if letters (apply string-append letters) nil)))

(provide 'ru_downcase)